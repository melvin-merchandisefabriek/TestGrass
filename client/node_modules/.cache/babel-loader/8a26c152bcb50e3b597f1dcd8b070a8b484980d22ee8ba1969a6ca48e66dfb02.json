{"ast":null,"code":"import React,{useRef,useEffect}from'react';import{earclip}from'../utils/earclip';// --- Expression compiler for config-driven math ---\nimport{jsx as _jsx}from\"react/jsx-runtime\";const safeMath={sin:Math.sin,cos:Math.cos,tan:Math.tan,abs:Math.abs,min:Math.min,max:Math.max,pow:Math.pow,PI:Math.PI,E:Math.E};function compileExpr(expr){if(typeof expr==='number')return()=>expr;if(typeof expr==='function')return expr;// If already compiled, return as is\nif(expr&&expr._compiled)return expr;// Compile string to function\nconst fn=function(vars){const keys=Object.keys(vars).concat(Object.keys(safeMath));const values=Object.values(vars).concat(Object.values(safeMath));// eslint-disable-next-line no-new-func\nreturn Function(...keys,`return (${expr});`)(...values);};fn._compiled=true;return fn;}// --- Cubic BÃ©zier sampling ---\nfunction cubicBezier(t,p0,p1,p2,p3){const mt=1-t;return[mt*mt*mt*p0[0]+3*mt*mt*t*p1[0]+3*mt*t*t*p2[0]+t*t*t*p3[0],mt*mt*mt*p0[1]+3*mt*mt*t*p1[1]+3*mt*t*t*p2[1]+t*t*t*p3[1]];}// --- Configurable shape loader ---\nfunction compileShapeConfig(shapeConfig){// Deep clone and compile all control point expressions\nconst compiled=JSON.parse(JSON.stringify(shapeConfig));compiled.controlPoints=compiled.controlPoints.map(pt=>({...pt,x:compileExpr(pt.x),y:compileExpr(pt.y)}));// (Optional: compile other animatable fields here)\nreturn compiled;}// Example: you can load this from JSON\nconst triangleShapeConfig={controlPoints:[{id:\"tri-top\",x:\"50+sway*20\",y:\"0\"},{id:\"tri-right\",x:\"60\",y:\"200\"},{id:\"tri-left\",x:\"40\",y:\"200\"},{id:\"tri-top-right-c1\",x:\"50+sin(t+1)*20\",y:\"60\"},{id:\"tri-top-right-c2\",x:\"60+sway*5\",y:\"120\"},{id:\"tri-left-top-c1\",x:\"40+sway*5\",y:\"120\"},{id:\"tri-left-top-c2\",x:\"50+sin(t+1)*20\",y:\"60\"}],segments:[{type:\"bezier\",points:[\"tri-top\",\"tri-top-right-c1\",\"tri-top-right-c2\",\"tri-right\"]},{type:\"line\",points:[\"tri-right\",\"tri-left\"]},{type:\"bezier\",points:[\"tri-left\",\"tri-left-top-c1\",\"tri-left-top-c2\",\"tri-top\"]}],fill:[0.1,0.7,0.2,1.0],width:100,height:200};const triangleShape=compileShapeConfig(triangleShapeConfig);const ShapeWebGLDemo=_ref=>{let{bladeCount=1,blades:bladesProp,height='100vh'}=_ref;const canvasRef=useRef(null);const animRef=useRef();// Use blades from prop if provided, else default to single blade\nconst blades=bladesProp&&bladesProp.length>0?bladesProp:[{baseX:0,// center\nbaseY:0,// center vertically\nscale:0.8,// fit nicely\nphase:0,speed:1,swayAmount:1}];useEffect(()=>{const canvas=canvasRef.current;function resizeCanvas(){canvas.width=window.innerWidth;canvas.height=window.innerHeight;canvas.style.width='100vw';canvas.style.height='100vh';}resizeCanvas();window.addEventListener('resize',resizeCanvas);const gl=canvas.getContext('webgl');if(!gl){console.error('WebGL not supported');return;}// Shaders\nconst vs=gl.createShader(gl.VERTEX_SHADER);gl.shaderSource(vs,'attribute vec2 p; void main() { gl_Position = vec4(p, 0, 1); }');gl.compileShader(vs);if(!gl.getShaderParameter(vs,gl.COMPILE_STATUS)){console.error('Vertex shader error:',gl.getShaderInfoLog(vs));}const fs=gl.createShader(gl.FRAGMENT_SHADER);gl.shaderSource(fs,`precision mediump float; void main() { gl_FragColor = vec4(${triangleShape.fill.join(\",\")}); }`);gl.compileShader(fs);if(!gl.getShaderParameter(fs,gl.COMPILE_STATUS)){console.error('Fragment shader error:',gl.getShaderInfoLog(fs));}const program=gl.createProgram();gl.attachShader(program,vs);gl.attachShader(program,fs);gl.linkProgram(program);if(!gl.getProgramParameter(program,gl.LINK_STATUS)){console.error('Program link error:',gl.getProgramInfoLog(program));}gl.useProgram(program);const pos=gl.getAttribLocation(program,'p');gl.enableVertexAttribArray(pos);// Buffers\nconst maxVerts=blades.length*128;// more for debug points\nconst vertArray=new Float32Array(maxVerts*2);const vertBuf=gl.createBuffer();// For debug: outline points\nconst outlineArray=new Float32Array(maxVerts*2);let outlineLen=0;function draw(t){let vtx=0;outlineLen=0;for(let i=0;i<blades.length;++i){const params=blades[i];// Animation variables\nconst animVars={t,...params,sway:Math.sin(t*params.speed+params.phase)*params.swayAmount};// Evaluate control points in local shape space (compiled math)\nconst cp={};for(const pt of triangleShape.controlPoints){cp[pt.id]=[pt.x(animVars),pt.y(animVars)];}// Map local shape to NDC, centered at (baseX, baseY), scaled\nfunction toNDC(x,y){// Map (0,0) at center, Y up, X right, both in [-1,1]\nconst sx=(x/triangleShape.width-0.5)*2*params.scale;const sy=(1-y/triangleShape.height-0.5)*2*params.scale;return[params.baseX+sx,params.baseY+sy];}// Build outline by sampling segments (no duplicate points)\nlet outline=[];for(let s=0;s<triangleShape.segments.length;++s){const seg=triangleShape.segments[s];if(seg.type==='line'){const a=toNDC(...cp[seg.points[0]]);const b=toNDC(...cp[seg.points[1]]);if(s===0){outline.push(a);outline.push(b);}else{outline.push(b);}}else if(seg.type==='bezier'){const[a,c1,c2,b]=seg.points.map(id=>toNDC(...cp[id]));const N=16;let bezierPoints=[];for(let j=0;j<=N;++j){bezierPoints.push(cubicBezier(j/N,a,c1,c2,b));}if(s===0){for(let j=0;j<bezierPoints.length;++j){outline.push(bezierPoints[j]);}}else{for(let j=1;j<bezierPoints.length;++j){outline.push(bezierPoints[j]);}}}}// --- DEBUG: Log outline and triangles ---\nif(i===0){console.log('First blade outline:',outline);}// Remove duplicate last point if outline is closed (just in case)\nlet outlinePoints=outline;if(outline.length>2){const first=outline[0],last=outline[outline.length-1];if(Math.abs(first[0]-last[0])<1e-6&&Math.abs(first[1]-last[1])<1e-6){outlinePoints=outline.slice(0,-1);}}// Ensure counter-clockwise order for ear clipping\nfunction polygonArea(pts){let area=0;for(let i=0,n=pts.length;i<n;++i){const[x0,y0]=pts[i];const[x1,y1]=pts[(i+1)%n];area+=x0*y1-x1*y0;}return area/2;}if(polygonArea(outlinePoints)<0){outlinePoints=outlinePoints.slice().reverse();}const tris=earclip(outlinePoints);if(i===0){console.log('Triangles:',tris);}for(let k=0;k<tris.length;++k){const[a,b,c]=tris[k];vertArray[vtx++]=outlinePoints[a][0];vertArray[vtx++]=outlinePoints[a][1];vertArray[vtx++]=outlinePoints[b][0];vertArray[vtx++]=outlinePoints[b][1];vertArray[vtx++]=outlinePoints[c][0];vertArray[vtx++]=outlinePoints[c][1];}// For debug: store outline points (for line strip)\nfor(let j=0;j<outlinePoints.length;++j){outlineArray[outlineLen++]=outlinePoints[j][0];outlineArray[outlineLen++]=outlinePoints[j][1];}// Also add the first point again to close the loop visually\noutlineArray[outlineLen++]=outlinePoints[0][0];outlineArray[outlineLen++]=outlinePoints[0][1];}// Upload and draw triangles\ngl.bindBuffer(gl.ARRAY_BUFFER,vertBuf);gl.bufferData(gl.ARRAY_BUFFER,vertArray,gl.DYNAMIC_DRAW);gl.vertexAttribPointer(pos,2,gl.FLOAT,false,0,0);gl.clearColor(0.1,0.1,0.1,1);gl.clear(gl.COLOR_BUFFER_BIT);gl.drawArrays(gl.TRIANGLES,0,vtx/2);// (Debug outline drawing removed)\n}function animate(){const t=performance.now()/1000;draw(t);animRef.current=requestAnimationFrame(animate);}animate();return()=>{cancelAnimationFrame(animRef.current);window.removeEventListener('resize',resizeCanvas);};},[]);return/*#__PURE__*/_jsx(\"canvas\",{ref:canvasRef,style:{display:'block',width:'100vw',height:'100vh'}});};export default ShapeWebGLDemo;","map":{"version":3,"names":["React","useRef","useEffect","earclip","jsx","_jsx","safeMath","sin","Math","cos","tan","abs","min","max","pow","PI","E","compileExpr","expr","_compiled","fn","vars","keys","Object","concat","values","Function","cubicBezier","t","p0","p1","p2","p3","mt","compileShapeConfig","shapeConfig","compiled","JSON","parse","stringify","controlPoints","map","pt","x","y","triangleShapeConfig","id","segments","type","points","fill","width","height","triangleShape","ShapeWebGLDemo","_ref","bladeCount","blades","bladesProp","canvasRef","animRef","length","baseX","baseY","scale","phase","speed","swayAmount","canvas","current","resizeCanvas","window","innerWidth","innerHeight","style","addEventListener","gl","getContext","console","error","vs","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","fs","FRAGMENT_SHADER","join","program","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","useProgram","pos","getAttribLocation","enableVertexAttribArray","maxVerts","vertArray","Float32Array","vertBuf","createBuffer","outlineArray","outlineLen","draw","vtx","i","params","animVars","sway","cp","toNDC","sx","sy","outline","s","seg","a","b","push","c1","c2","N","bezierPoints","j","log","outlinePoints","first","last","slice","polygonArea","pts","area","n","x0","y0","x1","y1","reverse","tris","k","c","bindBuffer","ARRAY_BUFFER","bufferData","DYNAMIC_DRAW","vertexAttribPointer","FLOAT","clearColor","clear","COLOR_BUFFER_BIT","drawArrays","TRIANGLES","animate","performance","now","requestAnimationFrame","cancelAnimationFrame","removeEventListener","ref","display"],"sources":["/home/melvinvanelderen/TestGrass/client/src/components/ShapeWebGLDemo.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { earclip } from '../utils/earclip';\n\n// --- Expression compiler for config-driven math ---\nconst safeMath = {\n  sin: Math.sin,\n  cos: Math.cos,\n  tan: Math.tan,\n  abs: Math.abs,\n  min: Math.min,\n  max: Math.max,\n  pow: Math.pow,\n  PI: Math.PI,\n  E: Math.E\n};\nfunction compileExpr(expr) {\n  if (typeof expr === 'number') return () => expr;\n  if (typeof expr === 'function') return expr;\n  // If already compiled, return as is\n  if (expr && expr._compiled) return expr;\n  // Compile string to function\n  const fn = function(vars) {\n    const keys = Object.keys(vars).concat(Object.keys(safeMath));\n    const values = Object.values(vars).concat(Object.values(safeMath));\n    // eslint-disable-next-line no-new-func\n    return Function(...keys, `return (${expr});`)(...values);\n  };\n  fn._compiled = true;\n  return fn;\n}\n\n// --- Cubic BÃ©zier sampling ---\nfunction cubicBezier(t, p0, p1, p2, p3) {\n  const mt = 1 - t;\n  return [\n    mt*mt*mt*p0[0] + 3*mt*mt*t*p1[0] + 3*mt*t*t*p2[0] + t*t*t*p3[0],\n    mt*mt*mt*p0[1] + 3*mt*mt*t*p1[1] + 3*mt*t*t*p2[1] + t*t*t*p3[1]\n  ];\n}\n\n\n// --- Configurable shape loader ---\nfunction compileShapeConfig(shapeConfig) {\n  // Deep clone and compile all control point expressions\n  const compiled = JSON.parse(JSON.stringify(shapeConfig));\n  compiled.controlPoints = compiled.controlPoints.map(pt => ({\n    ...pt,\n    x: compileExpr(pt.x),\n    y: compileExpr(pt.y)\n  }));\n  // (Optional: compile other animatable fields here)\n  return compiled;\n}\n\n// Example: you can load this from JSON\nconst triangleShapeConfig = {\n  controlPoints: [\n    { id: \"tri-top\", x: \"50+sway*20\", y: \"0\" },\n    { id: \"tri-right\", x: \"60\", y: \"200\" },\n    { id: \"tri-left\", x: \"40\", y: \"200\" },\n    { id: \"tri-top-right-c1\", x: \"50+sin(t+1)*20\", y: \"60\" },\n    { id: \"tri-top-right-c2\", x: \"60+sway*5\", y: \"120\" },\n    { id: \"tri-left-top-c1\", x: \"40+sway*5\", y: \"120\" },\n    { id: \"tri-left-top-c2\", x: \"50+sin(t+1)*20\", y: \"60\" }\n  ],\n  segments: [\n    { type: \"bezier\", points: [\"tri-top\", \"tri-top-right-c1\", \"tri-top-right-c2\", \"tri-right\"] },\n    { type: \"line\", points: [\"tri-right\", \"tri-left\"] },\n    { type: \"bezier\", points: [\"tri-left\", \"tri-left-top-c1\", \"tri-left-top-c2\", \"tri-top\"] }\n  ],\n  fill: [0.1, 0.7, 0.2, 1.0],\n  width: 100,\n  height: 200\n};\n\nconst triangleShape = compileShapeConfig(triangleShapeConfig);\n\nconst ShapeWebGLDemo = ({ bladeCount = 1, blades: bladesProp, height = '100vh' }) => {\n  const canvasRef = useRef(null);\n  const animRef = useRef();\n  // Use blades from prop if provided, else default to single blade\n  const blades = bladesProp && bladesProp.length > 0\n    ? bladesProp\n    : [\n        {\n          baseX: 0, // center\n          baseY: 0, // center vertically\n          scale: 0.8, // fit nicely\n          phase: 0,\n          speed: 1,\n          swayAmount: 1\n        }\n      ];\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    function resizeCanvas() {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n      canvas.style.width = '100vw';\n      canvas.style.height = '100vh';\n    }\n    resizeCanvas();\n    window.addEventListener('resize', resizeCanvas);\n    const gl = canvas.getContext('webgl');\n    if (!gl) {\n      console.error('WebGL not supported');\n      return;\n    }\n    // Shaders\n    const vs = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vs, 'attribute vec2 p; void main() { gl_Position = vec4(p, 0, 1); }');\n    gl.compileShader(vs);\n    if (!gl.getShaderParameter(vs, gl.COMPILE_STATUS)) {\n      console.error('Vertex shader error:', gl.getShaderInfoLog(vs));\n    }\n    const fs = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fs, `precision mediump float; void main() { gl_FragColor = vec4(${triangleShape.fill.join(\",\")}); }`);\n    gl.compileShader(fs);\n    if (!gl.getShaderParameter(fs, gl.COMPILE_STATUS)) {\n      console.error('Fragment shader error:', gl.getShaderInfoLog(fs));\n    }\n    const program = gl.createProgram();\n    gl.attachShader(program, vs);\n    gl.attachShader(program, fs);\n    gl.linkProgram(program);\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      console.error('Program link error:', gl.getProgramInfoLog(program));\n    }\n    gl.useProgram(program);\n    const pos = gl.getAttribLocation(program, 'p');\n    gl.enableVertexAttribArray(pos);\n    // Buffers\n    const maxVerts = blades.length * 128; // more for debug points\n    const vertArray = new Float32Array(maxVerts * 2);\n    const vertBuf = gl.createBuffer();\n    // For debug: outline points\n    const outlineArray = new Float32Array(maxVerts * 2);\n    let outlineLen = 0;\n\n    function draw(t) {\n      let vtx = 0;\n      outlineLen = 0;\n      for (let i = 0; i < blades.length; ++i) {\n        const params = blades[i];\n        // Animation variables\n        const animVars = {\n          t,\n          ...params,\n          sway: Math.sin(t * params.speed + params.phase) * params.swayAmount\n        };\n        // Evaluate control points in local shape space (compiled math)\n        const cp = {};\n        for (const pt of triangleShape.controlPoints) {\n          cp[pt.id] = [pt.x(animVars), pt.y(animVars)];\n        }\n        // Map local shape to NDC, centered at (baseX, baseY), scaled\n        function toNDC(x, y) {\n          // Map (0,0) at center, Y up, X right, both in [-1,1]\n          const sx = (x / triangleShape.width - 0.5) * 2 * params.scale;\n          const sy = (1 - y / triangleShape.height - 0.5) * 2 * params.scale;\n          return [params.baseX + sx, params.baseY + sy];\n        }\n        // Build outline by sampling segments (no duplicate points)\n        let outline = [];\n        for (let s = 0; s < triangleShape.segments.length; ++s) {\n          const seg = triangleShape.segments[s];\n          if (seg.type === 'line') {\n            const a = toNDC(...cp[seg.points[0]]);\n            const b = toNDC(...cp[seg.points[1]]);\n            if (s === 0) {\n              outline.push(a);\n              outline.push(b);\n            } else {\n              outline.push(b);\n            }\n          } else if (seg.type === 'bezier') {\n            const [a, c1, c2, b] = seg.points.map(id => toNDC(...cp[id]));\n            const N = 16;\n            let bezierPoints = [];\n            for (let j = 0; j <= N; ++j) {\n              bezierPoints.push(cubicBezier(j / N, a, c1, c2, b));\n            }\n            if (s === 0) {\n              for (let j = 0; j < bezierPoints.length; ++j) {\n                outline.push(bezierPoints[j]);\n              }\n            } else {\n              for (let j = 1; j < bezierPoints.length; ++j) {\n                outline.push(bezierPoints[j]);\n              }\n            }\n          }\n        }\n        // --- DEBUG: Log outline and triangles ---\n        if (i === 0) {\n          console.log('First blade outline:', outline);\n        }\n        // Remove duplicate last point if outline is closed (just in case)\n        let outlinePoints = outline;\n        if (outline.length > 2) {\n          const first = outline[0], last = outline[outline.length - 1];\n          if (Math.abs(first[0] - last[0]) < 1e-6 && Math.abs(first[1] - last[1]) < 1e-6) {\n            outlinePoints = outline.slice(0, -1);\n          }\n        }\n        // Ensure counter-clockwise order for ear clipping\n        function polygonArea(pts) {\n          let area = 0;\n          for (let i = 0, n = pts.length; i < n; ++i) {\n            const [x0, y0] = pts[i];\n            const [x1, y1] = pts[(i + 1) % n];\n            area += (x0 * y1 - x1 * y0);\n          }\n          return area / 2;\n        }\n        if (polygonArea(outlinePoints) < 0) {\n          outlinePoints = outlinePoints.slice().reverse();\n        }\n        const tris = earclip(outlinePoints);\n        if (i === 0) {\n          console.log('Triangles:', tris);\n        }\n        for (let k = 0; k < tris.length; ++k) {\n          const [a, b, c] = tris[k];\n          vertArray[vtx++] = outlinePoints[a][0];\n          vertArray[vtx++] = outlinePoints[a][1];\n          vertArray[vtx++] = outlinePoints[b][0];\n          vertArray[vtx++] = outlinePoints[b][1];\n          vertArray[vtx++] = outlinePoints[c][0];\n          vertArray[vtx++] = outlinePoints[c][1];\n        }\n        // For debug: store outline points (for line strip)\n        for (let j = 0; j < outlinePoints.length; ++j) {\n          outlineArray[outlineLen++] = outlinePoints[j][0];\n          outlineArray[outlineLen++] = outlinePoints[j][1];\n        }\n        // Also add the first point again to close the loop visually\n        outlineArray[outlineLen++] = outlinePoints[0][0];\n        outlineArray[outlineLen++] = outlinePoints[0][1];\n      }\n      // Upload and draw triangles\n      gl.bindBuffer(gl.ARRAY_BUFFER, vertBuf);\n      gl.bufferData(gl.ARRAY_BUFFER, vertArray, gl.DYNAMIC_DRAW);\n      gl.vertexAttribPointer(pos, 2, gl.FLOAT, false, 0, 0);\n      gl.clearColor(0.1, 0.1, 0.1, 1);\n      gl.clear(gl.COLOR_BUFFER_BIT);\n      gl.drawArrays(gl.TRIANGLES, 0, vtx / 2);\n      // (Debug outline drawing removed)\n    }\n\n    function animate() {\n      const t = performance.now() / 1000;\n      draw(t);\n      animRef.current = requestAnimationFrame(animate);\n    }\n    animate();\n    return () => {\n      cancelAnimationFrame(animRef.current);\n      window.removeEventListener('resize', resizeCanvas);\n    };\n  }, []);\n  return <canvas ref={canvasRef} style={{ display: 'block', width: '100vw', height: '100vh' }} />;\n};\n\nexport default ShapeWebGLDemo;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}