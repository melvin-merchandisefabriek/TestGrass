{"ast":null,"code":"import React,{useState,useEffect}from'react';import Shape from'./Shape';import{getGrassBladeData}from'./TriangleArray';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const trianglePath=process.env.PUBLIC_URL+'/data/triangleShape.json';const UnifiedSceneSVG=()=>{const[windowSize,setWindowSize]=useState({width:window.innerWidth,height:window.innerHeight});useEffect(()=>{function handleResize(){setWindowSize({width:window.innerWidth,height:window.innerHeight});}window.addEventListener('resize',handleResize);return()=>window.removeEventListener('resize',handleResize);},[]);const{width,height}=windowSize;const viewBox=`0 0 ${width} ${height}`;// Get animated grass blade data from TriangleArray.js, pass width for spacing\nconst blades=getGrassBladeData(150,width,height);console.log('unc - width:',width);return/*#__PURE__*/_jsxs(\"svg\",{width:\"100vw\",height:\"100vh\",viewBox:viewBox,style:{display:'block',background:'#222'},children:[blades.map((blade,idx)=>/*#__PURE__*/_jsx(Shape,{filePath:trianglePath,shapeModifications:{modifyPosition:{svg:blade.position,global:undefined},// scale up each blade\nanimations:{controlPointAnimations:blade.controlPointAnimations,styleAnimations:{fill:blade.fill}}},renderAsGroup:true},idx)),/*#__PURE__*/_jsx(\"rect\",{x:0,y:0,width:40,height:40,fill:\"red\"}),/*#__PURE__*/_jsx(\"rect\",{x:width-40,y:0,width:40,height:40,fill:\"green\"}),/*#__PURE__*/_jsx(\"rect\",{x:0,y:height-40,width:40,height:40,fill:\"blue\"}),/*#__PURE__*/_jsx(\"rect\",{x:width-40,y:height-40,width:40,height:40,fill:\"yellow\"})]});};export default UnifiedSceneSVG;","map":{"version":3,"names":["React","useState","useEffect","Shape","getGrassBladeData","jsx","_jsx","jsxs","_jsxs","trianglePath","process","env","PUBLIC_URL","UnifiedSceneSVG","windowSize","setWindowSize","width","window","innerWidth","height","innerHeight","handleResize","addEventListener","removeEventListener","viewBox","blades","console","log","style","display","background","children","map","blade","idx","filePath","shapeModifications","modifyPosition","svg","position","global","undefined","animations","controlPointAnimations","styleAnimations","fill","renderAsGroup","x","y"],"sources":["/home/melvinvanelderen/TestGrass/client/src/components/UnifiedSceneSVG.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Shape from './Shape';\nimport { getGrassBladeData } from './TriangleArray';\n\nconst trianglePath = process.env.PUBLIC_URL + '/data/triangleShape.json';\n\nconst UnifiedSceneSVG = () => {\n  const [windowSize, setWindowSize] = useState({ width: window.innerWidth, height: window.innerHeight });\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowSize({ width: window.innerWidth, height: window.innerHeight });\n    }\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const { width, height } = windowSize;\n  const viewBox = `0 0 ${width} ${height}`;\n\n  // Get animated grass blade data from TriangleArray.js, pass width for spacing\n  const blades = getGrassBladeData(150, width, height);\n  console.log('unc - width:', width);\n\n  return (\n    <svg\n      width=\"100vw\"\n      height=\"100vh\"\n      viewBox={viewBox}\n      style={{ display: 'block', background: '#222' }}\n    >\n      {/* Grass blades as Shape components rendered as SVG groups */}\n      {blades.map((blade, idx) => (\n        <Shape\n          key={idx}\n          filePath={trianglePath}\n          shapeModifications={{\n            modifyPosition: { svg: blade.position, global: undefined}, // scale up each blade\n            animations: { controlPointAnimations: blade.controlPointAnimations, styleAnimations: { fill: blade.fill } }\n          }}\n          renderAsGroup={true}\n        />\n      ))}\n      {/* Debug squares at the four corners of the SVG */}\n      <rect x={0} y={0} width={40} height={40} fill=\"red\" />\n      <rect x={width-40} y={0} width={40} height={40} fill=\"green\" />\n      <rect x={0} y={height-40} width={40} height={40} fill=\"blue\" />\n      <rect x={width-40} y={height-40} width={40} height={40} fill=\"yellow\" />\n      {/* All other shapes/paths will go here in later steps */}\n    </svg>\n  );\n};\n\nexport default UnifiedSceneSVG;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}