{"ast":null,"code":"// SharedAnimatedTrianglesDefs.js\n// Definitions for vertices, color expressions, and position expressions for SharedAnimatedTriangles\n//vec4 for color can be used like this:\n//vec4(R, G, B, A)\n// Export a single config object containing all arrays and expressions\nexport const sharedAnimatedTrianglesConfig={visible:true,// Set to false to hide this config's rendering\nvertices:new Float32Array([// x,    y,    isTop, triIndex\n0.0,0.8,1,0,// v0: top1\n-0.8,-0.0,0,1,// v1: left\n0.8,-0.0,0,1,// v2: right\n0.0,-0.8,1,1,// v3: bottom1\n0.8,-0.8,0,1// v4: bottom2\n]),indices:new Uint16Array([0,1,2,// triangle 1\n3,1,2,// triangle 2\n4,2,3// triangle 3\n]),colorExpr:`\n    // Color by y position: blue at bottom, orange at top\n    float t = (vY + 0.8) / 1.6; // map y from [-0.8,0.8] to [0,1]\n    outColor = mix(vec4(0.0, 0.05, 0.0, 1.0), vec4(0.0, 1.0, 0.0, 1.0), t);\n  `,positionExpr:`\n    float t = (sin(time * 0.001 + triIndex * 1.5) + 1.0) * 0.5;\n    // Move x by an amount proportional to y: top moves most, bottom least\n    pos.x += t * pos.y;\n  `};","map":{"version":3,"names":["sharedAnimatedTrianglesConfig","visible","vertices","Float32Array","indices","Uint16Array","colorExpr","positionExpr"],"sources":["/home/melvinvanelderen/TestGrass/client/src/components/SharedAnimatedTrianglesDefs.js"],"sourcesContent":["// SharedAnimatedTrianglesDefs.js\n// Definitions for vertices, color expressions, and position expressions for SharedAnimatedTriangles\n\n//vec4 for color can be used like this:\n//vec4(R, G, B, A)\n\n// Export a single config object containing all arrays and expressions\nexport const sharedAnimatedTrianglesConfig = {\n  visible: true, // Set to false to hide this config's rendering\n  vertices: new Float32Array([\n    // x,    y,    isTop, triIndex\n     0.0,  0.8,   1,     0, // v0: top1\n    -0.8, -0.0,   0,     1, // v1: left\n     0.8, -0.0,   0,     1, // v2: right\n     0.0, -0.8,   1,     1, // v3: bottom1\n     0.8, -0.8,   0,     1, // v4: bottom2\n  ]),\n  indices: new Uint16Array([\n    0, 1, 2, // triangle 1\n    3, 1, 2,  // triangle 2\n    4, 2, 3 // triangle 3\n  ]),\n  colorExpr: `\n    // Color by y position: blue at bottom, orange at top\n    float t = (vY + 0.8) / 1.6; // map y from [-0.8,0.8] to [0,1]\n    outColor = mix(vec4(0.0, 0.05, 0.0, 1.0), vec4(0.0, 1.0, 0.0, 1.0), t);\n  `,\n  positionExpr: `\n    float t = (sin(time * 0.001 + triIndex * 1.5) + 1.0) * 0.5;\n    // Move x by an amount proportional to y: top moves most, bottom least\n    pos.x += t * pos.y;\n  `\n};\n"],"mappings":"AAAA;AACA;AAEA;AACA;AAEA;AACA,MAAO,MAAM,CAAAA,6BAA6B,CAAG,CAC3CC,OAAO,CAAE,IAAI,CAAE;AACfC,QAAQ,CAAE,GAAI,CAAAC,YAAY,CAAC,CACzB;AACC,GAAG,CAAG,GAAG,CAAI,CAAC,CAAM,CAAC,CAAE;AACxB,CAAC,GAAG,CAAE,CAAC,GAAG,CAAI,CAAC,CAAM,CAAC,CAAE;AACvB,GAAG,CAAE,CAAC,GAAG,CAAI,CAAC,CAAM,CAAC,CAAE;AACvB,GAAG,CAAE,CAAC,GAAG,CAAI,CAAC,CAAM,CAAC,CAAE;AACvB,GAAG,CAAE,CAAC,GAAG,CAAI,CAAC,CAAM,CAAG;AAAA,CACzB,CAAC,CACFC,OAAO,CAAE,GAAI,CAAAC,WAAW,CAAC,CACvB,CAAC,CAAE,CAAC,CAAE,CAAC,CAAE;AACT,CAAC,CAAE,CAAC,CAAE,CAAC,CAAG;AACV,CAAC,CAAE,CAAC,CAAE,CAAE;AAAA,CACT,CAAC,CACFC,SAAS,CAAE;AACb;AACA;AACA;AACA,GAAG,CACDC,YAAY,CAAE;AAChB;AACA;AACA;AACA,GACA,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}