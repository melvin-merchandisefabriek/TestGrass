{"ast":null,"code":"import React,{useState,useCallback,useRef,useEffect}from'react';import Shape from'./Shape';/**\n * MenuButton component with a square shape loaded from JSON\n * @returns {JSX.Element} The MenuButton component\n */import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MenuButton=()=>{//const test = rgba(255, 255, 255, 0.51)\n// Path to JSON files\nconst menuButtonSquarePath=process.env.PUBLIC_URL+'/data/menuButtonSquare.json';const expandPath=process.env.PUBLIC_URL+'/data/menuButtonExpand.json';const normalPath=process.env.PUBLIC_URL+'/data/menuButtonNormal.json';// State to track whether the button is expanded\nconst[isExpanded,setIsExpanded]=useState(false);// State for storing loaded modifications\nconst[expandModifications,setExpandModifications]=useState(null);const[normalModifications,setNormalModifications]=useState(null);// Reference to the menu button container for click outside detection\nconst menuRef=useRef(null);// Load expansion and normal modifications from JSON files\nuseEffect(()=>{const loadModifications=async()=>{try{// Load expand modifications\nconst expandResponse=await fetch(expandPath);if(!expandResponse.ok){throw new Error(`Failed to load expand modifications: ${expandResponse.status}`);}const expandData=await expandResponse.json();setExpandModifications(expandData);// Load normal modifications\nconst normalResponse=await fetch(normalPath);if(!normalResponse.ok){throw new Error(`Failed to load normal modifications: ${normalResponse.status}`);}const normalData=await normalResponse.json();setNormalModifications(normalData);}catch(error){console.error('Error loading modifications:',error);}};loadModifications();},[expandPath,normalPath]);// Handle click outside the menu to collapse it\nuseEffect(()=>{const handleClickOutside=event=>{if(isExpanded&&menuRef.current&&!menuRef.current.contains(event.target)){console.log('Clicked outside menu - collapsing');setIsExpanded(false);}};// Add event listener when expanded\nif(isExpanded){document.addEventListener('mousedown',handleClickOutside);}// Cleanup\nreturn()=>{document.removeEventListener('mousedown',handleClickOutside);};},[isExpanded]);// Handle click on the menu button\nconst handleClick=useCallback(()=>{if(!expandModifications){console.warn('Expand modifications not yet loaded');return;}console.log('Menu button clicked - expanding');// Set expanded state\nsetIsExpanded(true);},[expandModifications]);// Determine which modifications to apply based on expanded state\nconst currentModifications=isExpanded?expandModifications:normalModifications;return/*#__PURE__*/_jsxs(\"div\",{ref:menuRef,className:\"menu-button-container\",children:[/*#__PURE__*/_jsx(Shape,{className:\"menu-button-shape\",filePath:menuButtonSquarePath,shapeModifications:currentModifications,onClick:handleClick}),isExpanded&&/*#__PURE__*/_jsx(\"div\",{className:\"menu-content\"})]});};export default MenuButton;","map":{"version":3,"names":["React","useState","useCallback","useRef","useEffect","Shape","jsx","_jsx","jsxs","_jsxs","MenuButton","menuButtonSquarePath","process","env","PUBLIC_URL","expandPath","normalPath","isExpanded","setIsExpanded","expandModifications","setExpandModifications","normalModifications","setNormalModifications","menuRef","loadModifications","expandResponse","fetch","ok","Error","status","expandData","json","normalResponse","normalData","error","console","handleClickOutside","event","current","contains","target","log","document","addEventListener","removeEventListener","handleClick","warn","currentModifications","ref","className","children","filePath","shapeModifications","onClick"],"sources":["/home/melvinvanelderen/TestGrass/client/src/components/MenuButton.js"],"sourcesContent":["import React, { useState, useCallback, useRef, useEffect } from 'react';\nimport Shape from './Shape';\n\n/**\n * MenuButton component with a square shape loaded from JSON\n * @returns {JSX.Element} The MenuButton component\n */\nconst MenuButton = () => {\n  //const test = rgba(255, 255, 255, 0.51)\n  // Path to JSON files\n  const menuButtonSquarePath = process.env.PUBLIC_URL + '/data/menuButtonSquare.json';\n  const expandPath = process.env.PUBLIC_URL + '/data/menuButtonExpand.json';\n  const normalPath = process.env.PUBLIC_URL + '/data/menuButtonNormal.json';\n  \n  // State to track whether the button is expanded\n  const [isExpanded, setIsExpanded] = useState(false);\n  \n  // State for storing loaded modifications\n  const [expandModifications, setExpandModifications] = useState(null);\n  const [normalModifications, setNormalModifications] = useState(null);\n  \n  // Reference to the menu button container for click outside detection\n  const menuRef = useRef(null);\n  \n  // Load expansion and normal modifications from JSON files\n  useEffect(() => {\n    const loadModifications = async () => {\n      try {\n        // Load expand modifications\n        const expandResponse = await fetch(expandPath);\n        if (!expandResponse.ok) {\n          throw new Error(`Failed to load expand modifications: ${expandResponse.status}`);\n        }\n        const expandData = await expandResponse.json();\n        setExpandModifications(expandData);\n        \n        // Load normal modifications\n        const normalResponse = await fetch(normalPath);\n        if (!normalResponse.ok) {\n          throw new Error(`Failed to load normal modifications: ${normalResponse.status}`);\n        }\n        const normalData = await normalResponse.json();\n        setNormalModifications(normalData);\n      } catch (error) {\n        console.error('Error loading modifications:', error);\n      }\n    };\n    \n    loadModifications();\n  }, [expandPath, normalPath]);\n  \n  // Handle click outside the menu to collapse it\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (isExpanded && menuRef.current && !menuRef.current.contains(event.target)) {\n        console.log('Clicked outside menu - collapsing');\n        setIsExpanded(false);\n      }\n    };\n    \n    // Add event listener when expanded\n    if (isExpanded) {\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n    \n    // Cleanup\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isExpanded]);\n  \n  // Handle click on the menu button\n  const handleClick = useCallback(() => {\n    if (!expandModifications) {\n      console.warn('Expand modifications not yet loaded');\n      return;\n    }\n    \n    console.log('Menu button clicked - expanding');\n    \n    // Set expanded state\n    setIsExpanded(true);\n  }, [expandModifications]);\n\n  // Determine which modifications to apply based on expanded state\n  const currentModifications = isExpanded ? expandModifications : normalModifications;\n\n  return (\n    <div ref={menuRef} className=\"menu-button-container\">\n      <Shape \n        className=\"menu-button-shape\"\n        filePath={menuButtonSquarePath}\n        shapeModifications={currentModifications}\n        onClick={handleClick}\n      />\n      {isExpanded && (\n        <div className=\"menu-content\">\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MenuButton;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}