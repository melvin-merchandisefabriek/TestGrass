{"ast":null,"code":"import React,{useRef,useEffect}from'react';// Helper for cubic Bezier\nimport{jsx as _jsx}from\"react/jsx-runtime\";function cubicBezier(t,p0,p1,p2,p3){const mt=1-t;return[mt*mt*mt*p0[0]+3*mt*mt*t*p1[0]+3*mt*t*t*p2[0]+t*t*t*p3[0],mt*mt*mt*p0[1]+3*mt*mt*t*p1[1]+3*mt*t*t*p2[1]+t*t*t*p3[1]];}// Helper for quadratic Bezier\nfunction quadBezier(t,p0,p1,p2){const mt=1-t;return[mt*mt*p0[0]+2*mt*t*p1[0]+t*t*p2[0],mt*mt*p0[1]+2*mt*t*p1[1]+t*t*p2[1]];}// Earclip triangulation (simple, assumes no self-intersections)\nfunction earclip(points){// points: [[x, y], ...] (must be CCW and closed)\nconst n=points.length;if(n<3)return[];const indices=Array.from({length:n},(_,i)=>i);const triangles=[];function area(a,b,c){return(b[0]-a[0])*(c[1]-a[1])-(b[1]-a[1])*(c[0]-a[0]);}function isEar(i0,i1,i2){const a=points[i0],b=points[i1],c=points[i2];if(area(a,b,c)<=0)return false;for(let j=0;j<n;++j){if(j===i0||j===i1||j===i2)continue;// Barycentric test\nconst p=points[j];const s=((a[1]-c[1])*(p[0]-c[0])+(c[0]-a[0])*(p[1]-c[1]))/((a[1]-c[1])*(b[0]-c[0])+(c[0]-a[0])*(b[1]-c[1]));const t=((c[1]-b[1])*(p[0]-c[0])+(b[0]-c[0])*(p[1]-c[1]))/((a[1]-c[1])*(b[0]-c[0])+(c[0]-a[0])*(b[1]-c[1]));if(s>0&&t>0&&s+t<1)return false;}return true;}let v=indices.slice();while(v.length>3){let earFound=false;for(let i=0;i<v.length;++i){const i0=v[(i+v.length-1)%v.length];const i1=v[i];const i2=v[(i+1)%v.length];if(isEar(i0,i1,i2)){triangles.push([i0,i1,i2]);v.splice(i,1);earFound=true;break;}}if(!earFound)break;// Fallback: can't find ear\n}if(v.length===3)triangles.push([v[0],v[1],v[2]]);return triangles;}/**\n * BezierShapeWebGL\n *\n * Props:\n *   shape: Array of segments, each segment is:\n *     { type: 'quadratic'|'cubic', points: [[x0,y0], [x1,y1], [x2,y2]] or [[x0,y0], [x1,y1], [x2,y2], [x3,y3]] }\n *   resolution: number of samples per segment\n */const BezierShapeWebGL=_ref=>{let{shape,resolution=32}=_ref;const canvasRef=useRef();useEffect(()=>{const canvas=canvasRef.current;canvas.width=window.innerWidth;canvas.height=window.innerHeight;const gl=canvas.getContext('webgl');if(!gl)return;// 1. Sample points along all segments\nlet points=[];for(const seg of shape){for(let i=0;i<resolution;++i){const t=i/resolution;if(seg.type==='quadratic'){points.push(quadBezier(t,...seg.points));}else if(seg.type==='cubic'){points.push(cubicBezier(t,...seg.points));}}}// Close the shape\npoints.push(points[0]);// 2. Triangulate\nconst tris=earclip(points);const vertices=[];for(const tri of tris){for(const idx of tri){vertices.push(points[idx][0],points[idx][1]);}}const vertArray=new Float32Array(vertices);// 3. WebGL setup\nconst vsSource=`\nattribute vec2 position;\nvoid main() {\n    gl_Position = vec4(position, 0.0, 1.0);\n}`;const fsSource=`\nprecision mediump float;\nvoid main() {\n    gl_FragColor = vec4(0.2, 0.8, 0.3, 1.0);\n}`;function createShader(type,src){const s=gl.createShader(type);gl.shaderSource(s,src);gl.compileShader(s);if(!gl.getShaderParameter(s,gl.COMPILE_STATUS))throw new Error(gl.getShaderInfoLog(s));return s;}const vs=createShader(gl.VERTEX_SHADER,vsSource);const fs=createShader(gl.FRAGMENT_SHADER,fsSource);const prog=gl.createProgram();gl.attachShader(prog,vs);gl.attachShader(prog,fs);gl.linkProgram(prog);gl.useProgram(prog);const posLoc=gl.getAttribLocation(prog,'position');const buf=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,buf);gl.bufferData(gl.ARRAY_BUFFER,vertArray,gl.STATIC_DRAW);gl.enableVertexAttribArray(posLoc);gl.vertexAttribPointer(posLoc,2,gl.FLOAT,false,0,0);gl.viewport(0,0,canvas.width,canvas.height);gl.clearColor(0.1,0.1,0.1,1);gl.clear(gl.COLOR_BUFFER_BIT);gl.drawArrays(gl.TRIANGLES,0,vertices.length/2);},[shape,resolution]);return/*#__PURE__*/_jsx(\"canvas\",{ref:canvasRef,style:{width:'100vw',height:'100vh',display:'block'}});};export default BezierShapeWebGL;","map":{"version":3,"names":["React","useRef","useEffect","jsx","_jsx","cubicBezier","t","p0","p1","p2","p3","mt","quadBezier","earclip","points","n","length","indices","Array","from","_","i","triangles","area","a","b","c","isEar","i0","i1","i2","j","p","s","v","slice","earFound","push","splice","BezierShapeWebGL","_ref","shape","resolution","canvasRef","canvas","current","width","window","innerWidth","height","innerHeight","gl","getContext","seg","type","tris","vertices","tri","idx","vertArray","Float32Array","vsSource","fsSource","createShader","src","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","Error","getShaderInfoLog","vs","VERTEX_SHADER","fs","FRAGMENT_SHADER","prog","createProgram","attachShader","linkProgram","useProgram","posLoc","getAttribLocation","buf","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","viewport","clearColor","clear","COLOR_BUFFER_BIT","drawArrays","TRIANGLES","ref","style","display"],"sources":["/home/melvinvanelderen/TestGrass/client/src/components/BezierShapeWebGL.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\n\n// Helper for cubic Bezier\nfunction cubicBezier(t, p0, p1, p2, p3) {\n    const mt = 1 - t;\n    return [\n        mt*mt*mt*p0[0] + 3*mt*mt*t*p1[0] + 3*mt*t*t*p2[0] + t*t*t*p3[0],\n        mt*mt*mt*p0[1] + 3*mt*mt*t*p1[1] + 3*mt*t*t*p2[1] + t*t*t*p3[1]\n    ];\n}\n\n// Helper for quadratic Bezier\nfunction quadBezier(t, p0, p1, p2) {\n    const mt = 1 - t;\n    return [\n        mt*mt*p0[0] + 2*mt*t*p1[0] + t*t*p2[0],\n        mt*mt*p0[1] + 2*mt*t*p1[1] + t*t*p2[1]\n    ];\n}\n\n// Earclip triangulation (simple, assumes no self-intersections)\nfunction earclip(points) {\n    // points: [[x, y], ...] (must be CCW and closed)\n    const n = points.length;\n    if (n < 3) return [];\n    const indices = Array.from({length: n}, (_, i) => i);\n    const triangles = [];\n    function area(a, b, c) {\n        return (b[0]-a[0])*(c[1]-a[1]) - (b[1]-a[1])*(c[0]-a[0]);\n    }\n    function isEar(i0, i1, i2) {\n        const a = points[i0], b = points[i1], c = points[i2];\n        if (area(a, b, c) <= 0) return false;\n        for (let j = 0; j < n; ++j) {\n            if (j === i0 || j === i1 || j === i2) continue;\n            // Barycentric test\n            const p = points[j];\n            const s = ((a[1]-c[1])*(p[0]-c[0]) + (c[0]-a[0])*(p[1]-c[1])) /\n                      ((a[1]-c[1])*(b[0]-c[0]) + (c[0]-a[0])*(b[1]-c[1]));\n            const t = ((c[1]-b[1])*(p[0]-c[0]) + (b[0]-c[0])*(p[1]-c[1])) /\n                      ((a[1]-c[1])*(b[0]-c[0]) + (c[0]-a[0])*(b[1]-c[1]));\n            if (s > 0 && t > 0 && s + t < 1) return false;\n        }\n        return true;\n    }\n    let v = indices.slice();\n    while (v.length > 3) {\n        let earFound = false;\n        for (let i = 0; i < v.length; ++i) {\n            const i0 = v[(i+v.length-1)%v.length];\n            const i1 = v[i];\n            const i2 = v[(i+1)%v.length];\n            if (isEar(i0, i1, i2)) {\n                triangles.push([i0, i1, i2]);\n                v.splice(i, 1);\n                earFound = true;\n                break;\n            }\n        }\n        if (!earFound) break; // Fallback: can't find ear\n    }\n    if (v.length === 3) triangles.push([v[0], v[1], v[2]]);\n    return triangles;\n}\n\n/**\n * BezierShapeWebGL\n *\n * Props:\n *   shape: Array of segments, each segment is:\n *     { type: 'quadratic'|'cubic', points: [[x0,y0], [x1,y1], [x2,y2]] or [[x0,y0], [x1,y1], [x2,y2], [x3,y3]] }\n *   resolution: number of samples per segment\n */\nconst BezierShapeWebGL = ({ shape, resolution = 32 }) => {\n    const canvasRef = useRef();\n\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        canvas.width = window.innerWidth;\n        canvas.height = window.innerHeight;\n        const gl = canvas.getContext('webgl');\n        if (!gl) return;\n\n        // 1. Sample points along all segments\n        let points = [];\n        for (const seg of shape) {\n            for (let i = 0; i < resolution; ++i) {\n                const t = i / resolution;\n                if (seg.type === 'quadratic') {\n                    points.push(quadBezier(t, ...seg.points));\n                } else if (seg.type === 'cubic') {\n                    points.push(cubicBezier(t, ...seg.points));\n                }\n            }\n        }\n        // Close the shape\n        points.push(points[0]);\n\n        // 2. Triangulate\n        const tris = earclip(points);\n        const vertices = [];\n        for (const tri of tris) {\n            for (const idx of tri) {\n                vertices.push(points[idx][0], points[idx][1]);\n            }\n        }\n        const vertArray = new Float32Array(vertices);\n\n        // 3. WebGL setup\n        const vsSource = `\nattribute vec2 position;\nvoid main() {\n    gl_Position = vec4(position, 0.0, 1.0);\n}`;\n        const fsSource = `\nprecision mediump float;\nvoid main() {\n    gl_FragColor = vec4(0.2, 0.8, 0.3, 1.0);\n}`;\n        function createShader(type, src) {\n            const s = gl.createShader(type);\n            gl.shaderSource(s, src);\n            gl.compileShader(s);\n            if (!gl.getShaderParameter(s, gl.COMPILE_STATUS)) throw new Error(gl.getShaderInfoLog(s));\n            return s;\n        }\n        const vs = createShader(gl.VERTEX_SHADER, vsSource);\n        const fs = createShader(gl.FRAGMENT_SHADER, fsSource);\n        const prog = gl.createProgram();\n        gl.attachShader(prog, vs);\n        gl.attachShader(prog, fs);\n        gl.linkProgram(prog);\n        gl.useProgram(prog);\n        const posLoc = gl.getAttribLocation(prog, 'position');\n        const buf = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, buf);\n        gl.bufferData(gl.ARRAY_BUFFER, vertArray, gl.STATIC_DRAW);\n        gl.enableVertexAttribArray(posLoc);\n        gl.vertexAttribPointer(posLoc, 2, gl.FLOAT, false, 0, 0);\n        gl.viewport(0, 0, canvas.width, canvas.height);\n        gl.clearColor(0.1, 0.1, 0.1, 1);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        gl.drawArrays(gl.TRIANGLES, 0, vertices.length/2);\n    }, [shape, resolution]);\n\n    return <canvas ref={canvasRef} style={{ width: '100vw', height: '100vh', display: 'block' }} />;\n};\n\nexport default BezierShapeWebGL;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}